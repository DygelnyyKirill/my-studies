"use strict";const formBox=document.querySelector(".form-box1"),formLogin=document.getElementById("login"),formRegist=document.getElementById("register"),message={loading:"img/load.gif"},statusMessage=document.createElement("img");statusMessage.src=message.loading,statusMessage.className="load-form";const formSend=(e,t)=>o=>{o.preventDefault();const n=formValidate(e),s="http://localhost:3000/auth/"+t;if(0===n){e.append(statusMessage);const t={email:e.querySelector('input[name="email"]').value,password:e.querySelector('input[name="password"]').value};console.log(t),(async(e,t)=>{const o=await fetch(e,{method:"POST",body:t,headers:{"Content-Type":"application/json"}});if(!o.ok)throw new Error;return await o.json()})(s,JSON.stringify(t)).then(e=>{localStorage.setItem("token",e.token),console.log(e),showModal(!0)}).catch(()=>{showModal(!1),console.log("error")}).finally(()=>{e.reset(),statusMessage.remove()})}else console.log("This is a required field.")};function makeRequest(){let e=JSON.parse(localStorage.getItem("token"));console.log("Authorization=Bearer "+e),fetch("http://localhost:3000/to-dos",{method:"GET",headers:{Authorization:"Bearer "+e}}).then(e=>e.json()).then(e=>{console.log(e)}).catch(e=>{console.log(e)})}function formValidate(e){let t=0,o=e.querySelector("._email"),n=e.querySelector("._password");return[o,n].forEach(e=>fieldRemoveError(e)),validateEmail(o)&&(fieldAddError(o),t++),""===n.value&&(fieldAddError(n),t++),t}function fieldAddError(e){e.parentElement.classList.add("_error"),e.classList.add("_error"),console.log("This is a required field.")}function fieldRemoveError(e){e.parentElement.classList.remove("_error"),e.classList.remove("_error"),console.log("ok")}function validateEmail(e){return!/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,8})+$/.test(e.value)}makeRequest(),formLogin.addEventListener("submit",formSend(formLogin,"login")),formRegist.addEventListener("submit",formSend(formRegist,"register"));const modal=document.querySelector(".modal"),contentModal=document.querySelector(".text-content");function showModal(e){modal.style.display="flex";const t=`\n        <div class="text-content"> \n            Login was ${e?"successful":"unsuccessful"}\n        </div>\n    `;contentModal.innerHTML=t,setTimeout(()=>{modal.style.display="none"},1500)}document.addEventListener("DOMContentLoaded",(function(){const e=document.getElementById("login"),t=document.getElementById("register"),o=document.getElementById("log-btn"),n=document.getElementById("reg-btn"),s=document.getElementById("btn");n.addEventListener("click",(function(){e.style.left="-400px",t.style.left="50px",s.style.left="110px"})),o.addEventListener("click",(function(){e.style.left="50px",t.style.left="450px",s.style.left="0px"}))}));const addMessage=document.querySelector(".message"),addBtn=document.querySelector(".add"),todo=document.querySelector(".todo"),containerTodo=document.querySelector(".containerTodo");let todoList=[];function displayMessages(){let e="";todoList.forEach((function(t,o){e+=`\n        <li>\n            <input type="checkbox" id="item_${o}" ${t.checked?"checked":""}>\n            <label for="item_${o}" class="${t.important?"important":""}">${t.todo}</label>\n        </li>\n        `,todo.innerHTML=e}))}localStorage.getItem("todo")&&(todoList=JSON.parse(localStorage.getItem("todo")),displayMessages()),addBtn.addEventListener("click",(function(){const e={todo:addMessage.value,checked:!1,important:!1};todoList.push(e),displayMessages(),localStorage.setItem("todo",JSON.stringify(todoList)),getAllClients()})),todo.addEventListener("change",(function(e){const t=todo.querySelector("[for="+e.target.getAttribute("id")+"]").innerHTML;todoList.forEach((function(e){e.todo===t&&(e.checked=!e.checked,localStorage.setItem("todo",JSON.stringify(todoList)))})),console.log("valueLabel:",t)})),todo.addEventListener("contextmenu",(function(e){e.preventDefault(),todoList.forEach((function(e,t){e.todo===event.target.innerHTML&&(event.ctrlKey?todoList.splice(t,1):e.important=!e.important,displayMessages(),localStorage.setItem("todo",JSON.stringify(todoList)))}))}));