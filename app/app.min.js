"use strict"
    const formLogin = document.getElementById('login');
    const formRegist = document.getElementById('register');

    const message = {
        loading: 'img/load.gif',
    }

    const statusMessage = document.createElement('img');
    statusMessage.src = message.loading;
    statusMessage.className = 'load-form';

    
    const formSend = (form, path) => (e) => {
        e.preventDefault();
        const error = formValidate(form);

        if (error === 0) {
            form.append(statusMessage);
      
            const formData = new FormData(form);
            const json = JSON.stringify(Object.fromEntries(formData.entries()));
            
            fetch(`http://localhost:3000/auth/${path}`, {
                method: "POST",
                body: json,
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(data => {
                console.log(data.text());
                showModal();
            }).catch(() => {
                showModal();
            }).finally(() => {
                form.reset();
                statusMessage.remove()
            })
        } else {
            console.log('This is a required field.');
        };
    };

    formLogin.addEventListener('submit', formSend(formLogin, 'login'));
    formRegist.addEventListener('submit', formSend(formRegist, 'register'));

function formValidate(form) {
    let error = 0;
    let emailInput = form.querySelector('._email');
    let passwordInput = form.querySelector('._password');


    [emailInput, passwordInput].forEach((input) => fieldRemoveError(input))

        if (validateEmail(emailInput)) {
            fieldAddError(emailInput);
            error++;
        }   

        if (passwordInput.value === '') {
            fieldAddError(passwordInput);
            error++;
        }
    return error;
}

function fieldAddError(input) {
    input.parentElement.classList.add('_error');
    input.classList.add('_error');
    console.log('This is a required field.')
}

function fieldRemoveError(input) {
    input.parentElement.classList.remove('_error');
    input.classList.remove('_error');
    console.log('ok')
}

function validateEmail(input) {
    return !/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,8})+$/.test(input.value);
}
const authBth = document.getElementById('form-modal');
const modal = document.querySelector('.modal');
const formBox = document.querySelector('.form-box');
const contentModal = document.querySelector('.text-content');

authBth.addEventListener('click', openFormBox);

function openFormBox() {
    formBox.style.display = "block";
}

function showModal() {
    formBox.style.display = "none";
    modal.style.display = "flex";
    const div = document.createElement('div');
    div.className = 'text-content';
    div.textContent = 'Login was successful'
    contentModal.appendChild(div);
    setTimeout(() => {
        modal.style.display = "none";
    }, 1500);
    containerTodo.style.display = 'block';  
}

"use strict"

document.addEventListener('DOMContentLoaded', function() {
 
    const formLog = document.getElementById('login');
    const formReg = document.getElementById('register');
    const logBtn = document.getElementById('log-btn');
    const regBtn = document.getElementById('reg-btn');
    const logReg = document.getElementById('btn');
    regBtn.addEventListener('click', function() {
        formLog.style.left = "-400px";
        formReg.style.left = "50px";
        logReg.style.left = "110px";
    });
    logBtn.addEventListener('click', function() {
        formLog.style.left = "50px";
        formReg.style.left = "450px";
        logReg.style.left = "0px";
    });
    
});
const addMessage = document.querySelector('.message');
const addBtn = document.querySelector('.add');
const todo = document.querySelector('.todo');
const containerTodo = document.querySelector('.containerTodo');

let todoList = [];
if (localStorage.getItem('todo')) {
    todoList = JSON.parse(localStorage.getItem('todo'));
    displayMessages(); 
}

addBtn.addEventListener('click', function() {

    const newTodo = {
        todo: addMessage.value,
        checked: false,
        important: false
    };

    todoList.push(newTodo);
    displayMessages();
    localStorage.setItem('todo', JSON.stringify(todoList));

})

function displayMessages() {
    let displayMessage = '';        
    todoList.forEach(function(item, i) {
        displayMessage += `
        <li>
            <input type="checkbox" id="item_${i}" ${item.checked ? 'checked' : ''}>
            <label for="item_${i}" class="${item.important ? 'important' : ''}">${item.todo}</label>
        </li>
        `;
        todo.innerHTML = displayMessage;
    });
}

todo.addEventListener('change', function(e) {
    const valueLabel = todo.querySelector('[for=' + e.target.getAttribute('id') + ']').innerHTML;
    todoList.forEach(function(item) {
        if (item.todo === valueLabel) {
            item.checked = !item.checked;
            localStorage.setItem('todo', JSON.stringify(todoList));
        }
    })
    console.log('valueLabel:', valueLabel)
})

todo.addEventListener('contextmenu', function(e) {
    e.preventDefault();
    todoList.forEach(function(item, i) {
        if (item.todo === event.target.innerHTML) {
            if (event.ctrlKey) {
                todoList.splice(i, 1);
            } else {
                item.important = !item.important;
            }
            displayMessages();
            localStorage.setItem('todo', JSON.stringify(todoList));
        }
    })
})